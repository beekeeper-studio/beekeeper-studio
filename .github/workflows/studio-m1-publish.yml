name: Studio - Mac M1 Publish

on:
  push:
    tags:
      - "v*"
    paths-ignore:
      - "apps/sqltools/**"

jobs:

  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-arm64]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Clean cache
        run: arch -arm64 yarn cache clean

      - name: Check dependencies
        run: "arch -arm64 yarn install --frozen-lockfile --network-timeout 100000"

      - name: Remove dist directory
        if: "!startsWith(matrix.os, 'windows')"
        run: rm -rf ./apps/studio/dist_electron
      - name: Remove dist directory windows
        if: startsWith(matrix.os, 'windows')
        run: Remove-Item dist_electron -Recurse -ErrorAction Ignore
      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.apple_key }}' > ~/private_keys/AuthKey_${{ secrets.apple_key_id }}.p8

      - name: Build and Publish
        run: cd apps/studio && arch -arm64 yarn run electron:build --arm64 --x64 --publish always
        env:
          CSC_LINK: ${{secrets.mac_dev}}
          CSC_KEY_PASSWORD: ${{secrets.mac_dev_pw}}
          API_KEY_ID: ${{ secrets.apple_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.apple_issuer_id }}
          GH_TOKEN: ${{ secrets.github_token }}
      - name: Cleanup artifacts
        if: "!startsWith(matrix.os, 'windows')"
        run: |
          npx rimraf "apps/studio/dist_electron/!(*.exe|*.deb|*.rpm|*.AppImage|*.dmg|*.snap)"
