// THIS FILE IS AUTOGENERATED BY typesGenerator.js
declare interface IBksConfig {
    db: {
        bigquery: {
            allowSkipToLastPage: boolean;
        };
        cassandra: {
            allowSkipToLastPage: boolean;
        };
        clickhouse: {
            allowSkipToLastPage: boolean;
        };
        cockroachdb: {
            allowSkipToLastPage: boolean;
            connectionTimeout: number;
            idleTimeout: number;
            maxClient: number;
        };
        duckdb: {
            allowSkipToLastPage: boolean;
        };
        firebird: {
            allowSkipToLastPage: boolean;
        };
        mariadb: {
            allowSkipToLastPage: boolean;
            connectTimeout: number;
        };
        mongodb: {
            allowSkipToLastPage: boolean;
        };
        mysql: {
            allowSkipToLastPage: boolean;
            connectTimeout: number;
        };
        oracle: {
            allowSkipToLastPage: boolean;
        };
        postgres: {
            allowSkipToLastPage: boolean;
            connectionTimeout: number;
            idleTimeout: number;
            maxClient: number;
        };
        redshift: {
            allowSkipToLastPage: boolean;
            connectionTimeout: number;
            idleTimeout: number;
            maxClient: number;
        };
        sqlanywhere: {
            allowSkipToLastPage: boolean;
        };
        sqlite: {
            allowSkipToLastPage: boolean;
        };
        sqlserver: {
            allowSkipToLastPage: boolean;
        };
        tidb: {
            allowSkipToLastPage: boolean;
        };
    };
    general: {
        checkForUpdatesInterval: number;
        dataSyncInterval: number;
        workspaceSyncInterval: number;
    };
    keybindings: {
        general: {
            addRow: string;
            cloneSelection: string;
            copySelection: string;
            deleteSelection: string;
            openInSqlEditor: string;
            openQuickSearch: string;
            pasteSelection: string;
            refresh: string[];
            save: string;
        };
        queryEditor: {
            closeTableFilter: string;
            copyResultSelection: string;
            openTableFilter: string;
            selectEditor: string;
            selectNextResult: string;
            selectPreviousResult: string;
            submitCurrentQueryToFile: string;
            submitQueryToFile: string;
            switchPaneFocus: string;
        };
        quickSearch: {
            altOpen: string;
            altOpenInBackground: string;
            close: string;
            focusSearch: string[];
            open: string;
            openInBackground: string;
            selectDown: string[];
            selectUp: string[];
        };
        tab: {
            closeTab: string;
            nextTab: string[];
            previousTab: string[];
            reopenLastClosedTab: string;
            switchTab1: string;
            switchTab2: string;
            switchTab3: string;
            switchTab4: string;
            switchTab5: string;
            switchTab6: string;
            switchTab7: string;
            switchTab8: string;
            switchTab9: string;
        };
        tableTable: {
            firstPage: string;
            focusOnFilterInput: string;
            lastPage: string;
            nextPage: string;
            openEditorModal: string;
            previousPage: string;
        };
    };
    plugins: {
        "bks-ai-shell": {
            enabled: boolean;
        };
    };
    security: {
        disconnectOnIdle: boolean;
        disconnectOnLock: boolean;
        disconnectOnSuspend: boolean;
        idleCheckIntervalSeconds: number;
        idleThresholdSeconds: number;
        lockMode: string;
        minPinLength: number;
    };
    ui: {
        export: {
            errorNoticeTimeout: number;
        };
        general: {
            binaryEncoding: string;
        };
        layout: {
            mainContentMinWidth: number;
            primarySidebarMinWidth: number;
            secondarySidebarMinWidth: number;
        };
        queryEditor: {
            maxResults: number;
        };
        tableList: {
            itemHeight: number;
        };
        tableTable: {
            defaultColumnWidth: number;
            largeFieldWidth: number;
            maxColumnWidth: number;
            maxInitialWidth: number;
            minColumnWidth: number;
            pageSize: number;
        };
        tableTriggers: {
            maxColumnWidth: number;
        };
    };
};

